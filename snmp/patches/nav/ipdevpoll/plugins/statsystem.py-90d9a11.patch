45a46,58
> from nav.mibs.dlink_dgs_1210_10_me_ax import DLink_DGS_1210_10_ME_AX_Mib
> from nav.mibs.dlink_dgs_1210_10_me_bx import DLink_DGS_1210_10_ME_BX_Mib
> from nav.mibs.dlink_dgs_1210_10_p_cx import DLink_DGS_1210_10_P_CX_Mib
> from nav.mibs.dlink_dgs_1210_10_p_me_ax import DLink_DGS_1210_10_P_ME_AX_Mib
> from nav.mibs.dlink_dgs_1210_10_p_me_bx import DLink_DGS_1210_10_P_ME_BX_Mib
> from nav.mibs.dlink_dgs_1210_12_ts_me_bx import DLink_DGS_1210_12_TS_ME_BX_Mib
> from nav.mibs.dlink_dgs_1210_28_me_ax import DLink_DGS_1210_28_ME_AX_Mib
> from nav.mibs.dlink_dgs_1210_28_me_bx import DLink_DGS_1210_28_ME_BX_Mib
> from nav.mibs.dlink_dgs_1210_28_xs_me_bx import DLink_DGS_1210_28_XS_ME_BX_Mib
> from nav.mibs.dlink_dgs_1210_52_me_bx import DLink_DGS_1210_52_ME_BX_Mib
> from nav.mibs.dlink_genmgmt import DLink_Genmgmt_Mib
> from nav.mibs.extreme_networks_software_monitor import Extreme_Networks_Software_Monitor_Mib
> from nav.mibs.nag_nag import Nag_Nag_Mib
46a60,62
>                                 VENDOR_ID_D_LINK_SYSTEMS_INC,
>                                 VENDOR_ID_EXTREME_NETWORKS,
>                                 VENDOR_ID_NAG_LLC,
56a73,91
>     VENDOR_ID_D_LINK_SYSTEMS_INC: [
>         DLink_DGS_1210_10_ME_AX_Mib,
>         DLink_DGS_1210_10_ME_BX_Mib,
>         DLink_DGS_1210_10_P_CX_Mib,
>         DLink_DGS_1210_10_P_ME_AX_Mib,
>         DLink_DGS_1210_10_P_ME_BX_Mib,
>         DLink_DGS_1210_12_TS_ME_BX_Mib,
>         DLink_DGS_1210_28_ME_AX_Mib,
>         DLink_DGS_1210_28_ME_BX_Mib,
>         DLink_DGS_1210_28_XS_ME_BX_Mib,
>         DLink_DGS_1210_52_ME_BX_Mib,
>         DLink_Genmgmt_Mib
>     ],
>     VENDOR_ID_EXTREME_NETWORKS: [
>         Extreme_Networks_Software_Monitor_Mib
>     ],
>     VENDOR_ID_NAG_LLC: [
>         Nag_Nag_Mib
>     ],
62a98,100
>     VENDOR_ID_NAG_LLC: [
>         Nag_Nag_Mib
>     ],
131a170,171
>             except KeyError:
>                 continue
133c173,176
<                 defer.returnValue(load + utilization)
---
>                 if load or utilization:
>                     defer.returnValue(load + utilization)
>                 else:
>                     continue
